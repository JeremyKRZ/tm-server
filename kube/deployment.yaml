apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: server
          image: gcr.io/tm-server-krz/server:latest
          imagePullPolicy: "Always"
          ports:
            - containerPort: 2351
            - containerPort: 3451
            - containerPort: 5006
          env:
            # Variables d'environnement si n√©cessaire
            - name: "SERVER_TITLE"
              value: "Trackmania"
            - name: "SERVER_NAME"
              value: "KRZ Training"
            - name: "TRACKLIST"
              value: "ascension.xml"
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pyplanet-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pyplanet
  template:
    metadata:
      labels:
        app: pyplanet
    spec:
      initContainers:
        - name: wait-for-server
          image: busybox
          command: ["sh", "-c", "until nslookup server-deployment.$(namespace).svc.cluster.local; do echo waiting for server; sleep 2; done"]
        - name: wait-for-database
          image: busybox
          command: ["sh", "-c", "until nslookup database-deployment.$(namespace).svc.cluster.local; do echo waiting for database; sleep 2; done"]
      containers:
        - name: pyplanet
          image: gcr.io/tm-server-krz/pyplanet:latest
          imagePullPolicy: "Always"
      restartPolicy: Always
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-deployment
spec:
  selector:
    matchLabels:
      app: database
  replicas: 1
  template:
    metadata:
      labels:
        app: database
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: database
          image: mariadb:latest
          imagePullPolicy: "Always"
          ports:
            - containerPort: 3306
          env:
            - name: "MYSQL_ROOT_PASSWORD"
              value: "root"
            - name: "MYSQL_DATABASE"
              value: "pyplanet"
            - name: "MYSQL_USER"
              value: "pyplanet"
            - name: "MYSQL_PASSWORD"
              value: "pyplanet"
          args:
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_unicode_ci"
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute="SELECT 1"
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - mysqladmin --user=root --password=$$MYSQL_ROOT_PASSWORD ping
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: database-volume
              mountPath: /var/lib/mysql
      volumes:
        - name: database-volume
          persistentVolumeClaim:
            claimName: database-pvc
      restartPolicy: "Always"