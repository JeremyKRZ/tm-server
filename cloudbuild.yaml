steps:
  # Build and push the server Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/server:$COMMIT_SHA', '-f', './compose/server.Dockerfile', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/server:$COMMIT_SHA']

  # Build and push the pyplanet Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/pyplanet:$COMMIT_SHA', '-f', './compose/pyplanet.Dockerfile', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pyplanet:$COMMIT_SHA']

  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kube/deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=tm-server-cluster'
  
   # Apply the service configuration
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kube/service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=tm-server-cluster'